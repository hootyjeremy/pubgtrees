let vm=new Vue({el:"#vueapp",data:{match_data:[],strTeamRoster:'',},created:function(){},methods:{getMatchData:function(matches_array){this.match_data=matches_array},resolveMatchType:function(match_type){if(match_type=='competitive'){return'Ranked'}else{return'Unranked'}},resolveKnocks:function(mode,knocks){if(mode=='solo'||mode=='solo-fpp'){return'-'}else{return knocks}},printRoster:function(matchRoster,player_name){var strRoster='';for(let i=0;i<matchRoster.length;i++){if(matchRoster[i].name!=player_name){strRoster+=', '+matchRoster[i].name}}
if(strRoster!=''){strRoster=player_name+strRoster}else{strRoster=player_name}
if(matchRoster.length==1){strRoster=player_name}
return strRoster},analyzeMatch:function(_matchId,index){for(let i=0;i<this.match_data.length;i++){if(i==index){document.getElementById('matchRow'+i).classList.add('activeMatchRow')}else{document.getElementById('matchRow'+i).classList.remove('activeMatchRow')}}
GetTelemetry(_matchId)}},})
let vueMatchInfo=new Vue({el:'#d3-tree01',data:{createdAt:null,duration:null,gameMode:null,id:null,mapName:null,matchType:null,shardId:null},methods:{updateTreeMatchDetails:function(matchDetails){this.createdAt=matchDetails.createdAt;this.duration=matchDetails.duration;this.gameMode=matchDetails.gameMode.toUpperCase();this.id=matchDetails.id;this.mapName=matchDetails.mapName.toUpperCase();this.matchType=vm.resolveMatchType(matchDetails.matchType);this.shardId=matchDetails.shardId},}})
let vuePlayerReport=new Vue({el:"#div-modal",data:{selectedPlayer:null,kills:null,damageDealt:null,DBNOs:null,timeSurvived:null,winPlace:null,teamKills:null,rowId:null,arrPlayerReport:[],isHidden:!0,},methods:{updatePlayerReport:function(name,killer,playerTeam,killerTeam,arrPlayerCards,arrPlayersDamageLog,allBotNames,allHumanNames){console.log('isHidden: '+this.isHidden);if(allBotNames.includes(name)){document.getElementById('botReportDisclaimer').style.display='block';document.getElementById('div-reportStats').style.display='none'}else{document.getElementById('botReportDisclaimer').style.display='none';document.getElementById('div-reportStats').style.display='block'}
this.selectedPlayer=name;this.kills='(invalid, bot)';this.damageDealt='(invalid, bot)';this.DBNOs='(invalid, bot)';this.timeSurvived='(invalid, bot)';this.winPlace='(invalid, bot)';this.teamKills='(invalid, bot)';arrPlayerCards.forEach(element=>{if(element.name==name){this.kills=element.kills;this.damageDealt=parseInt(element.damageDealt).toLocaleString('en');this.DBNOs=element.DBNOs;this.timeSurvived=element.timeSurvived;this.winPlace=element.winPlace;this.teamKills=element.teamKills}});rowId=0;this.arrPlayerReport=[];arrPlayersDamageLog.forEach(record=>{if(record.attacker.name==this.selectedPlayer||record.victim.name==this.selectedPlayer){let _event='';let _info='';let _distance='';let attackerName=record.attacker.name;let victimName=record.victim.name;let attackerHealth='';let victimHealth='';let armor='';let attackerClass='';let victimClass='';let rowClass='';let zone='';if(record._T=='LogPlayerTakeDamage'){if(this.isHidden){return}
_event=(record.damage>0&&record.damage<2)?record.damage.toFixed(1):parseInt(record.damage);attackerHealth=(record.attacker.health>0&&record.attacker.health<2)?record.attacker.health.toFixed(1):parseInt(record.attacker.health);victimHealth=(record.victim.healthAfterDamage>0&&record.victim.healthAfterDamage<2)?record.victim.healthAfterDamage.toFixed(1):parseInt(record.victim.healthAfterDamage);_info=this.resolveDamageReason(record.damageCauserName,record.damageReason,record.damageTypeCategory);if(record.damageReason=='HeadShot'){armor=this.translateHead(record.victim.armor.head)}else if(record.damageReason=='TorsoShot'){armor=this.translateVest(record.victim.armor.vest)}
if(record.selfDamage){_info+=' (Self-damage)'}
if(record.killingStroke){}}else if(record._T=='LogPlayerMakeGroggy'){_event='\u25BC';rowClass='rowKill';if(record.teammateKnock){_info+=' (Teammate-knock)'}else if(record.selfKnock){_info+=' (Self-knock)'}else{}}else if(record._T=='LogPlayerRevive'){if(record.attacker.name==this.selectedPlayer){return}
_event='\u2227'}else if(record._T=='LogPlayerKill'){_event='\u2573';rowClass='rowKill';if(record.isThirst){_info+=' (Thirsted)'}
if(record.isSelfKill){_info+=' (Self-kill)'}
if(record.isNoRevive){_info+=' (Bleedout/No-revive)'}else if(record.isTeamWipe){_info+=' (Bleedout/Team-wiped)'}}
if(record.distance!=null){if(record.distance==-1){_distance='- - - - -'}else if(record.distance==0){_distance='- - - - -'}else{_distance=record.distance.toLocaleString('en')+' m'}}
let _damager=this.resolveDamager(record.damageCauserName,record.damageReason,record.damageTypeCategory);if(record.attacker.name==this.selectedPlayer){attackerClass='selectedPlayer'}
if(record.victim.name==this.selectedPlayer){victimClass='selectedPlayer'}
if(allBotNames.includes(record.attacker.name)){attackerClass='botPlayer'}
if(allBotNames.includes(record.victim.name)){victimClass='botPlayer'}
if(attackerName==killer&&attackerName!=name){attackerClass='killer'
if(allBotNames.includes(killer)){attackerName='[BOT] '+attackerName}}
if(victimName==killer&&victimName!=name){victimClass='killer';if(allBotNames.includes(killer)){victimName='[BOT] '+victim}}
if(attackerName!=killer&&killer!=''&&killerTeam!=0){killerTeam.teammates.forEach(teammate=>{if(attackerName==teammate.name){if(teammate.isBot){attackerName='[BOT] '+attackerName}
attackerClass='killerTeammate'}})}
if(victimName!=killer&&killer!=''&&killerTeam!=0){killerTeam.teammates.forEach(teammate=>{if(victimName==teammate.name){if(teammate.isBot){victimName='[BOT] '+victimName}
victimClass='killerTeammate'}})}
if(attackerName!=name){playerTeam.teammates.forEach(teammate=>{if(attackerName==teammate.name){if(teammate.isBot){attackerName='[BOT] '+attackerName}
attackerClass='playerTeammate'}})}
if(victimName!=name){playerTeam.teammates.forEach(teammate=>{if(victimName==teammate.name){if(teammate.isBot){victimName='[BOT] '+victimName}
victimClass='playerTeammate'}})}
if(_damager=='Grenade'||_damager=='Molotov'){_distance=''}
if(record.victim.zone[0]!=''){zone=translateZone(record.victim.zone[0])}
this.arrPlayerReport.push({'rowId':rowId,'matchTime':record.matchTime,'attacker':attackerName,'victim':victimName,'event':_event,'damagerInfo':_damager,'distance':_distance,'info':_info,'attackerClass':attackerClass,'victimClass':victimClass,'attackerHealth':attackerHealth,'victimHealth':victimHealth,'zone':zone,'rowClass':rowClass,'armor':armor,});rowId++}})},clearPlayerReport:function(){this.arrPlayerReport=[]},resolveDamager:function(damageCauserName,damageReason,damageTypeCategory){let _damager='';if(damageTypeCategory=='Gun'){_damager=damageCauserName}else if(damageTypeCategory=='Fall Damage'||damageTypeCategory=='Vehicle Crash'||damageTypeCategory=='Vehicle Hit'||damageTypeCategory=='Punch'){_damager=damageTypeCategory}else if(damageTypeCategory=='Grenade Explosion'){_damager=damageCauserName}else if(damageTypeCategory=='Bluezone'){_damager=damageTypeCategory}else if(damageTypeCategory=='Melee'){_damager=damageCauserName}else if(damageTypeCategory=='Molotov'){_damager='Molotov'}else{console.log(strLine);console.log('unaccounted damager...');console.log('damageTypeCategory',damageTypeCategory+' | damageCauserName',damageCauserName+' + damageReason',damageReason)}
return _damager},resolveDamageReason:function(damageCauserName,damageReason,damageTypeCategory){let r='';if(damageReason!=undefined&&damageReason!='NonSpecific'){r=damageReason;if(damageReason=='TorsoShot'){r='Torso'}else if(damageReason=='LegShot'){r='Leg'}else if(damageReason=='ArmShot'){r='Arm'}else if(damageReason=='HeadShot'){r='Headshot'}else if(damageReason=='PelvisShot'){r='Pelvis'}}
return r},translateHead(head){let r='';if(head==null){r='static/images/gear/minus (1)-white-small.png'}else if(head=='Item_Head_E_01_Lv1_C'){r='static/images/gear/helmet-level1.png'}else if(head=='Item_Head_E_02_Lv1_C'){r='static/images/gear/helmet-level1.png'}else if(head=='Item_Head_F_01_Lv2_C'){r='static/images/gear/helmet-level2.png'}else if(head=='Item_Head_F_02_Lv2_C'){r='static/images/gear/helmet-level2.png'}else if(head=='Item_Head_G_01_Lv3_C'){r='static/images/gear/helmet-level3.png'}
return r},translateVest(vest){let r='';if(vest==null){r='static/images/gear/minus (1)-white-small.png'}else if(vest=='Item_Armor_C_01_Lv3_C'){r='static/images/gear/vest-level3.png'}else if(vest=='Item_Armor_D_01_Lv2_C'){r='static/images/gear/vest-level2.png'}else if(vest=='Item_Armor_E_01_Lv1_C'){r='static/images/gear/vest-level1.png'}
return r}}})