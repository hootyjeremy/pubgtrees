let strLine="--------------------------------------------";let hooty_server_url='http://localhost:3000';let defaultPlayer='hooty__';let version='0.028'
const blTestingVersion=!!0;if(!blTestingVersion){hooty_server_url='https://www.pubgtrees.com';defaultPlayer='';console.log('live version: '+version);if(location.protocol=='http:'){location.replace('https://www.pubgtrees.com')}
console.log('you are at: '+location.href)}else{console.log('testing version: '+version);console.log('you are at: '+location.href)}
var strPlatform,strPlayerName;var prevPlatform,prevPlayerName;let glSelectedPlayer=null;let prevSelectedPlayer=null;let glMatchId='';let bypassCache=null;let blCycledKillsFound=!1;var url,player_url,match_url,telemetry_url="";var player_response_json;var match_response_json;var telemetry_response_json;var total_matches=0;let match_floors=[0];let match_floors_index=0;let searchDirection=null;let axios_telemetry_response=null;let blShowDamage=!1;window.addEventListener('load',(event)=>{document.getElementById('inputPlayerName').value=defaultPlayer;checkURLQuery();document.getElementById('btnSearchPlayer').addEventListener('click',(event)=>{btnSearchPlayer_Click()});document.getElementById("inputPlayerName").addEventListener("keyup",function(event){event.preventDefault();if(event.keyCode===13){document.getElementById("btnSearchPlayer").click()}});document.getElementById('btnPreviousMatches').addEventListener('click',(event)=>{btnPrevious_Click()});document.getElementById('btnNextMatches').addEventListener('click',(event)=>{btnNext_Click()});document.getElementById('btnCopyMatchURL').addEventListener('click',(event)=>{btnCopyMatchToClipboard_Click()});document.getElementById('btnCloseModal').addEventListener('click',(event)=>{HideModal()})
document.getElementById('btnCloseModal2').addEventListener('click',(event)=>{HideModal()})
document.getElementById('btnShowDamage').addEventListener('click',(event)=>{if(vuePlayerReport.isHidden){document.getElementById('btnShowDamage').textContent='Hide details'}else{document.getElementById('btnShowDamage').textContent='Show details'}
vuePlayerReport.isHidden=!vuePlayerReport.isHidden;RunPlayerDamageReport(glSelectedPlayer)})});window.addEventListener('keydown',(event)=>{if(event.key=='Escape'){if(document.getElementById('div-modal').style.display!='none'){HideModal()}}});window.addEventListener('click',(event)=>{if(event.target.id=='div-modal'){HideModal()}})
function ShowModal(){document.getElementById('div-modal').style.display='block';document.getElementById('div-modal').scrollIntoView({behavior:"smooth"})}
function HideModal(){document.getElementById('div-modal').style.display='none';vuePlayerReport.clearPlayerReport()}
function checkURLQuery(){if(location.search!=''){let params=location.search.substring(1,location.search.length).split('&');document.getElementById('inputPlayerName').value=params[1];strPlayerName=params[1];GetTelemetry(params[0])}else{}}
function btnCopyMatchToClipboard_Click(){navigator.permissions.query({name:"clipboard-write"}).then(result=>{if(result.state=="granted"||result.state=="prompt"){let clip=hooty_server_url+'/?'+glMatchId+'&'+strPlayerName;navigator.clipboard.writeText(clip).then(function(){},function(){alert('Could not copy to the clipboard.')})}})}
async function GetPlayerMatches(){let blCeilingHit=!1;let blFloorHit=!1;document.getElementById('d3-svg01').innerHTML='';if(strPlatform!=prevPlatform||strPlayerName!=prevPlayerName){if(blTestingVersion){console.log('resetting match_floor for new player')}
match_floors=[0];match_floors_index=0}
prevPlatform=strPlatform;prevPlayerName=strPlayerName;console.log('client requesting from '+hooty_server_url);console.log('requesting player:     '+strPlatform+'/'+strPlayerName);const btnSearch=document.getElementById('btnSearchPlayer');const btnPrevious=document.getElementById('btnPreviousMatches');const btnNext=document.getElementById('btnNextMatches');btnSearch.disabled=btnPrevious.disabled=btnNext.disabled=!0;document.getElementById('fetching').style.display="block";document.getElementById('vueapp').style.display="none";document.getElementById('div-analyzing').style.display='none';document.getElementById('d3-tree01').style.display='none';var axios_response=null;if(blTestingVersion){console.log('match_floors['+match_floors_index+']: '+match_floors[match_floors_index])}
try{axios_response=await axios.get(hooty_server_url+'/getplayermatches',{params:{'endpoint':'players','platform':strPlatform,'player_name':strPlayerName,'match_floor':match_floors[match_floors_index],'searchDirection':searchDirection,'match_id':'','telemetry_id':'','bypassCache':bypassCache,},headers:{'Content-Encoding':'gzip',}})}catch(error){alert('There was an error with the request. See the developer tools\' console log for fetching errors.');document.getElementById('fetching').style.display="none";return}
if(axios_response.data.pubgResponse.status!=200&&axios_response.data.pubgResponse.status!=null){if(axios_response.data.pubgResponse.status==429){console.log('ERROR: pubg api rate limit hit: '+axios_response.data.pubgResponse.status+', '+axios_response.data.pubgResponse.statusText);console.log(axios_response);alert('Rate limited exceeded. Please try again in 60 seconds.')}else{console.log('ERROR: could not find player in pubg api: '+axios_response.data.status+', '+axios_response.data.statusText);console.log(axios_response);alert('Could not find player in pubg api.')}
btnSearch.disabled=btnPrevious.disabled=btnNext.disabled=!1;document.getElementById('fetching').style.display="none";return}
if(blTestingVersion){console.log('bypassCache: '+bypassCache);console.log('GetPlayerMatches() axios_response...');console.log('current match_floor: '+match_floors[match_floors_index]+' of '+axios_response.data.totalMatches+', new ceiling: '+axios_response.data.match_ceiling);console.log('total matches: '+axios_response.data.totalMatches);console.dir(axios_response.data)}
if(match_floors.length==match_floors_index+1){match_floors.push(axios_response.data.match_ceiling)}
if(axios_response.data.match_ceiling<axios_response.data.totalMatches){blCeilingHit=!1}else{blCeilingHit=!0}
if(match_floors_index==0){blFloorHit=!0}else{blFloorHit=!1}
btnSearch.disabled=btnPrevious.disabled=btnNext.disabled=!1;if(blFloorHit){btnPrevious.disabled=!0;btnPrevious.classList.add('disabledButton')}else{btnPrevious.disabled=!1;btnPrevious.classList.remove('disabledButton')}
if(blCeilingHit){btnNext.disabled=!0;btnNext.classList.add('disabledButton')}else{btnNext.disabled=!1;btnNext.classList.remove('disabledButton')}
for(i=0;i<axios_response.data.matches.length;i++){if(axios_response.data.matches[i].DBNOs==0){axios_response.data.matches[i].DBNOs='-'}
if(axios_response.data.matches[i].kills==0){axios_response.data.matches[i].kills='-'}
if(axios_response.data.matches[i].damageDealt==0){axios_response.data.matches[i].damageDealt='-'}}
vm.getMatchData(axios_response.data.matches);document.getElementById('btnPreviousMatches').style.display="block";document.getElementById('btnNextMatches').style.display="block";document.getElementById('vueapp').style.display="block";document.getElementById('fetching').style.display="none"}
async function GetTelemetry(_matchID){console.log('Match diag -> platform: '+strPlatform+', matchId: '+_matchID+', player: \''+strPlayerName+'\'');glMatchId=_matchID;axios_telemetry_response=null;const div_analyze=document.getElementById('div-analyzing');const svg_d3tree01=document.getElementById('d3-tree01');div_analyze.style.display='block';svg_d3tree01.style.display='none';try{axios_telemetry_response=await axios.get(hooty_server_url+'/getmatchtelemetry',{params:{'platform':strPlatform,'matchID':_matchID,'player_name':strPlayerName,},headers:{'Content-Encoding':'gzip',}})}catch(error){alert('Error getting match details: '+error.message);document.getElementById('div-analyzing').style.display='none';document.getElementById('d3-tree01').style.display='none';return}
vueMatchInfo.updateTreeMatchDetails(axios_telemetry_response.data.matchDetails);if(axios_telemetry_response.data.pubgApiMatchResponseInfo.status!=200&&axios_telemetry_response.data.pubgApiMatchResponseInfo.status!=null){alert('Error getting match from pubg api. '+axios_telemetry_response.data.pubgApiMatchResponseInfo.status+': '+axios_telemetry_response.data.pubgApiMatchResponseInfo.statusText);div_analyze.style.display='none';svg_d3tree01.style.display='none';return}
if(blTestingVersion){console.log('axios_telemetry_response.data...');console.dir(axios_telemetry_response.data)}
try{document.getElementById('d3-svg01').innerHTML='';CreateTreeFromD3();document.getElementById('div-cycle-footnote').style.display=(blCycledKillsFound)?'block':'none';div_analyze.style.display='none';svg_d3tree01.style.display='block'}catch(error){if(error.message=='cycle'){alert('Cannot draw tree since two people killed each other and therefore destroys hierarchy. This is a bug I need to fix. I apologize.')}else{alert('D3 tree error: '+error.message)}
div_analyze.style.display='none';svg_d3tree01.style.display='none';return}
try{if(strPlayerName!=''){document.getElementById(strPlayerName).classList.add('searchedPlayer')}
document.getElementById('d3-tree01').scrollIntoView({behavior:"smooth"})}catch(error){console.log('error in UpdateTreeContext() -> '+error);alert('Error in UpdateTreeContext()');return}}
function RunPlayerDamageReport(selectedPlayer){glSelectedPlayer=selectedPlayer;let playerTeam=0;axios_telemetry_response.data.arrTeams.forEach(team=>{team.teammates.forEach(teammate=>{if(teammate.name==selectedPlayer){playerTeam=team}})})
let tmpKiller='';axios_telemetry_response.data.arrKillLog.forEach(element=>{if(element.victim==selectedPlayer){tmpKiller=element.killer;return}})
let killerTeam=0;if(tmpKiller!=''){axios_telemetry_response.data.arrTeams.forEach(team=>{team.teammates.forEach(teammate=>{if(teammate.name==tmpKiller){killerTeam=team;return}})
if(killerTeam!=0){return}})}
vuePlayerReport.updatePlayerReport(selectedPlayer,tmpKiller,playerTeam,killerTeam,axios_telemetry_response.data.arrPlayerCards,axios_telemetry_response.data.arrPlayersDamageLog,axios_telemetry_response.data.allBotNames,axios_telemetry_response.data.allHumanNames);if(vuePlayerReport.hitLocations.head+vuePlayerReport.hitLocations.body+vuePlayerReport.hitLocations.pelvis+vuePlayerReport.hitLocations.arm+vuePlayerReport.hitLocations.leg>0){new Chart(document.getElementById("pie-chart"),{type:'pie',data:{labels:["Head","Body","Pelvis","Arm","Leg"],datasets:[{label:"Hits",backgroundColor:["#60b6f0","#ab97e0","#efb8df","#ef8b65","#ffbd74"],data:[vuePlayerReport.hitLocations.head,vuePlayerReport.hitLocations.body,vuePlayerReport.hitLocations.pelvis,vuePlayerReport.hitLocations.arm,vuePlayerReport.hitLocations.leg]}]},options:{title:{display:!1,text:''}}});if(!vuePlayerReport.isHidden){document.getElementById('div-pie-chart').style.display='block'}else{document.getElementById('div-pie-chart').style.display='none'}}else{document.getElementById('div-pie-chart').style.display='none'}
ShowModal()}
function explodePie(e){for(var i=0;i<e.dataSeries.dataPoints.length;i++){if(i!==e.dataPointIndex)
e.dataSeries.dataPoints[i].exploded=!1}}
function PrintReportForSelectedPlayer(selectedPlayer){let playerTeamId=0;axios_telemetry_response.data.arrTeams.forEach(team=>{team.teammates.forEach(teammate=>{if(teammate.name==selectedPlayer){playerTeamId=team.teamId}})})
console.log(strLine+strLine);console.log('Damage/Kill log for player -> '+selectedPlayer+', teamId: '+playerTeamId);for(i=0;i<axios_telemetry_response.data.arrPlayersDamageLog.length;i++){var record=axios_telemetry_response.data.arrPlayersDamageLog[i];if(record.attacker.name==selectedPlayer||record.victim.name==selectedPlayer){var line='';var attackerTeamId=new String(record.attacker.teamId);attackerTeamId=attackerTeamId.padStart(3,'0')+'.';var victimTeamId=new String(record.victim.teamId);victimTeamId=victimTeamId.padStart(3,'0')+'.';var attackerName=new String(record.attacker.name).padEnd(16,' ');var victimName=new String(record.victim.name).padEnd(16,' ');if(record._T=='LogPlayerTakeDamage'){var killingStroke=(record.killingStroke==!0)?' *kill/knock*':'';var teammateDamage=(record.teammateDamage==!0)?' *teammate-damage*':'';var selfDamage=(record.selfDamage==!0)?' *self-damage*':'';line=record.matchTime+' ['+attackerTeamId+' '+attackerName+'   '+victimTeamId+' '+victimName+'] '+strBot(record.attacker.isBot)+' * '+strBot(record.victim.isBot)+' '+parseInt(record.attacker.health)+' vs '+parseInt(record.victim.healthBeforeDamage)+', dmg: '+parseInt(record.damage)+', '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+', distance: '+record.distance+killingStroke+selfDamage+teammateDamage}else if(record._T=='LogPlayerMakeGroggy'){if(record.byPlayer){line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' v '+victimTeamId+' '+victimName+'] '+strBot(record.attacker.isBot)+' v '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+' *knock*'}else{line=record.matchTime+' ['+record.attacker.name.padEnd(16,' ')+'     v '+victimTeamId+' '+victimName+'] *env* v '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason}}else if(record._T=='LogPlayerKill'){if(record.byPlayer){var _thirst=(record.isThirst)?' *thirst*':'';var _selfKill=(record.isSelfKill)?' *self-kill*':'';var _teammateKill=(record.isTeammateKill)?' *teammate-kill*':'';let _bleedOut='';if(record.isTeamWipe&&record.isTeamWipe!=null){_bleedOut=' *bleedout/team-wiped*'}else if(record.isNoRevive&&record.isTeamWipe!=null){_bleedOut=' *bleedout/no-revive*'}
line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' x '+victimTeamId+' '+victimName+'] '+strBot(record.attacker.isBot)+' x '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+_thirst+_selfKill+_teammateKill+_bleedOut}else{line=record.matchTime+' ['+attackerName+'     x '+victimTeamId+' '+victimName+'] *env* x '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+' bleedout?'}}else if(record._T=='LogPlayerRevive'){line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' ^ '+victimTeamId+' '+victimName+'] *revive*'}
console.log(line)}else if(record.victim.teamId==playerTeamId){var line=null;var attackerTeamId=new String(record.attacker.teamId);attackerTeamId=attackerTeamId.padStart(3,'0')+'.';var victimTeamId=new String(record.victim.teamId);victimTeamId=victimTeamId.padStart(3,'0')+'.';var attackerName=new String(record.attacker.name).padEnd(16,' ');var victimName=new String(record.victim.name).padEnd(16,' ');if(record._T=='LogPlayerMakeGroggy'){if(record.byPlayer){line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' v '+victimTeamId+' '+victimName+'] '+strBot(record.attacker.isBot)+' v '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+' *knock*'}else{line=record.matchTime+' ['+record.attacker.name.padEnd(16,' ')+'     v '+victimTeamId+' '+victimName+'] *env* v '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason}}else if(record._T=='LogPlayerKill'){if(record.byPlayer){var _thirst=(record.isThirst)?' *thirst*':'';var _selfKill=(record.isSelfKill)?' *self-kill*':'';var _teammateKill=(record.isTeammateKill)?' *teammate-kill*':'';let _bleedOut='';if(record.isTeamWipe&&record.isTeamWipe!=null){_bleedOut=' *bleedout/team-wiped*'}else if(record.isNoRevive&&record.isNoRevive!=null){_bleedOut=' *bleedout/no-revive*'}
line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' x '+victimTeamId+' '+victimName+'] '+strBot(record.attacker.isBot)+' x '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+_thirst+_selfKill+_teammateKill+_bleedOut}else{line=record.matchTime+' ['+attackerName+'     x '+victimTeamId+' '+victimName+'] *env* x '+strBot(record.victim.isBot)+' '+record.damageTypeCategory+'/'+record.damageCauserName+'/'+record.damageReason+' bleedout?'}}else if(record._T=='LogPlayerRevive'){line=record.matchTime+' ['+attackerTeamId+' '+attackerName+' ^ '+victimTeamId+' '+victimName+'] *revive*'}
if(line!=null){console.log('%c'+line,'color: #98a0a6')}}}}
function CreateTreeFromD3(){blCycledKillsFound=!1;const response=axios_telemetry_response.data;let table=d3.csvParse(response.csvDataForD3);const root=d3.stratify().id(function(d){return d.name}).parentId(function(d){return d.parent})(table);const path_width=1200;const dx=14;const dy=140;const tree=d3.tree().nodeSize([dx,dy]);let custom_width=160+(root.height*dy);let custom_height=0;let custom_neg_height=0;let custom_pos_height=0;tree(root);let x0=Infinity;let x1=-x0;root.each((d)=>{if(d.x>x1)x1=d.x;if(d.x<x0)x0=d.x;if(d.x<0){if(d.x<custom_neg_height){custom_neg_height=d.x}}else{if(d.x>custom_pos_height){custom_pos_height=d.x}}});custom_height=(Math.abs(custom_neg_height)+custom_pos_height)+40;const svg=d3
.select(document.getElementById("d3-svg01")).style("width",custom_width).style("height",custom_height).style('background-color','#373738');const g=svg.append("g").attr("font-family","sans-serif").attr("font-size",12).attr("transform",`translate(${10},${dx - x0})`);const link=g.append("g").attr("fill","none").attr("stroke-opacity",0.4).attr("stroke-width",1.5).selectAll("path").data(root.links()).enter().append("path").attr("stroke",d=>{if(d.source.id=='Match'){return'#373738'}else{return"#8f91a1"}}).attr("d",d3
.linkHorizontal().x(d=>d.y).y(d=>d.x));const node=g.append("g").selectAll("g").data(root.descendants()).enter().append("g").attr("transform",d=>`translate(${d.y},${d.x})`);node.append("circle").attr("fill",d=>{return(d.id=='Match')?"#373738":"#8f91a1"}).attr("r",2.5);node.append("text").attr('fill',"#dcddde").attr('class',d=>{let winnerClass='';if(response.allHumanNames.includes(d.data.name)){response.arrSurvivors.forEach(element=>{if(element.name==d.data.name){winnerClass=' winner'}})
return'allPlayers humanPlayers'+winnerClass}else if(response.allBotNames.includes(d.data.name)){response.arrSurvivors.forEach(element=>{if(element.name==d.data.name){winnerClass=' winner'}})
return'allPlayers botPlayers'+winnerClass}else if(d.data.name=='Winner'||d.data.name=='Winners'){return'categories'
return'categories winner'}else if(d.data.name=='Match'||d.data.name=='Environment kills'||d.data.name=='Self kills'||d.data.name=='Cycled kills'){return'categories'}else if(d.data.name.includes('<')){return'categories'}else if(d.data.name.includes('(')){return'categories'}}).attr('id',d=>{if(response.allHumanNames.includes(d.data.name)||response.allBotNames.includes(d.data.name)){return d.data.name}}).attr('onclick',d=>{if(response.allHumanNames.includes(d.data.name)||response.allBotNames.includes(d.data.name)){return'UpdateTreeContext(\''+d.data.name+'\')'}}).attr('cursor',d=>{if(d.data.name=='Match'||d.data.name=='Winner'||d.data.name=='Winners'||d.data.name=='Environment kills'||d.data.name=='Self kills'||d.data.name=='Cycled kills'||d.data.name.includes('<')||d.data.name.includes('(')){return'normal'}else{return'pointer'}}).attr("dy","0.5em").attr("x",d=>{return(d.data.name=='Winner'||d.data.name=='Winners'||d.data.name=='Environment kills'||d.data.name=='Self kills'||d.data.name=='Cycled kills')?-6:6}).attr("text-anchor",d=>{return(d.data.name=='Winner'||d.data.name=='Winners'||d.data.name=='Environment kills'||d.data.name=='Self kills'||d.data.name=='Cycled kills')?"end":"start"}).text(d=>{if(d.data.name=='Match'){return''}else if(d.data.name=='Winner'||d.data.name=='Winners'||d.data.name=='Environment kills'||d.data.name=='Self kills'||d.data.name=='Cycled kills'){if(d.data.name=='Cycled kills'){blCycledKillsFound=!0}
return'<'+d.data.name+'>'}else{return d.data.name}})}
function UpdateTreeContext(selectedPlayer){RunPlayerDamageReport(selectedPlayer);const response=axios_telemetry_response.data;let allPlayers=document.getElementsByClassName('allPlayers');let selectedPlayerTeamId=null;let selectedPlayerKiller=null;let selectedPlayerKillerTeamId=null;response.arrTeams.forEach(element=>{element.teammates.forEach(teammate=>{if(teammate.name==selectedPlayer){selectedPlayerTeamId=element.teamId}})})
response.arrKillLog.forEach(element=>{if(element.victim==selectedPlayer&&element.killer!=selectedPlayer){selectedPlayerKiller=element.killer;response.arrTeams.forEach(team=>{team.teammates.forEach(teammate=>{if(teammate.name==selectedPlayerKiller){selectedPlayerKillerTeamId=team.teamId}})})}})
for(let i=0;i<allPlayers.length;i++){let playerClassList=allPlayers[i].classList;let currentPlayer=allPlayers[i].textContent;for(let j=playerClassList.length-1;j>=0;j--){if(playerClassList[j]!='allPlayers'&&playerClassList[j]!='humanPlayers'&&playerClassList[j]!='botPlayers'&&playerClassList[j]!='searchedPlayer'&&playerClassList[j]!='winner'){playerClassList.remove(playerClassList[j])}}
if(selectedPlayer==currentPlayer){playerClassList.add('selectedPlayer')}else{response.arrTeams.forEach(element=>{element.teammates.forEach(teammate=>{if(teammate.name==currentPlayer){if(element.teamId==selectedPlayerTeamId){playerClassList.add('playerTeammate')}else if(element.teamId==selectedPlayerKillerTeamId){if(currentPlayer==selectedPlayerKiller){playerClassList.add('killer')}else{playerClassList.add('killerTeammate')}}}})})}}}
function btnSearchPlayer_Click(){if(document.getElementById("inputPlayerName").value==""){return}
searchDirection='up';match_floors=[0];match_floors_index=0;prelim()}
function btnNext_Click(){if(document.getElementById("inputPlayerName").value==""){return}
searchDirection='up';match_floors_index++;prelim()}
function btnPrevious_Click(){if(document.getElementById("inputPlayerName").value==""){return}
searchDirection='down';match_floors_index--;prelim()}
function prelim(){strPlatform=document.querySelector("#slcPlatform option:checked").value;strPlayerName=document.getElementById("inputPlayerName").value;if(strPlayerName[strPlayerName.length-1]=='!'){bypassCache='y';strPlayerName=strPlayerName.slice(0,strPlayerName.length-1)}else{bypassCache='n'}
console.log(strLine);GetPlayerMatches()}
function _printRoster(roster){var strRoster;roster.forEach(element=>{strRoster+=element+', '});return strRoster}
function openTwitter(){window.open('https://twitter.com/pubgtrees','_blank')}
function ClickedSomething(_matchID){console.log('ClickedSomething() -> '+_matchID)}