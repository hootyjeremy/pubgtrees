let strLine="--------------------------------------------",hooty_server_url="http://localhost:3000",defaultPlayer="hooty__",version="2020.07.05 _ 001";const blTestingVersion=!1;var strPlatform,strPlayerName,prevPlatform,prevPlayerName;blTestingVersion?(alert("verify not using min js"),console.log("testing version: "+version),console.log("you are at: "+location.href)):(hooty_server_url="https://hooty-pubg01.herokuapp.com",defaultPlayer="",console.log("live version: "+version),"http:"==location.protocol&&location.replace("https://hooty-pubg01.herokuapp.com"));let prevSelectedPlayer=null,bypassCache=null;var url,player_url,match_url,player_response_json,match_response_json,telemetry_response_json,telemetry_url="",match_floor=0,total_matches=0;let axios_telemetry_response=null;async function GetPlayerMatches(){document.getElementById("d3-svg01").innerHTML="",match_floor=match_floor<0?0:match_floor,strPlatform==prevPlatform&&strPlayerName==prevPlayerName||(console.log("resetting match_floor for new player"),match_floor=0),prevPlatform=strPlatform,prevPlayerName=strPlayerName,console.log("client requesting from "+hooty_server_url),console.log("requesting player:     "+strPlatform+"/"+strPlayerName);const e=document.getElementById("btnSearchPlayer"),a=document.getElementById("btnPreviousMatches"),t=document.getElementById("btnNextMatches");e.disabled=a.disabled=t.disabled=!0,document.getElementById("fetching").style.display="block",document.getElementById("vueapp").style.display="none",document.getElementById("div-analyzing").style.display="none",document.getElementById("d3-tree01").style.display="none";var l=null;try{l=await axios.get(hooty_server_url+"/getplayermatches",{params:{endpoint:"players",platform:strPlatform,player_name:strPlayerName,match_floor:match_floor,match_id:"",telemetry_id:"",bypassCache:bypassCache},headers:{"Content-Encoding":"gzip"}})}catch(e){return alert("There was an error with the request. See the developer tools' console log for fetching errors."),void(document.getElementById("fetching").style.display="none")}if(200!=l.data.pubgResponse.status&&null!=l.data.pubgResponse.status)return console.log("ERROR: could not find player in pubg api: "+l.data.status+", "+l.data.statusText),alert("could not find player in pubg api"),e.disabled=a.disabled=t.disabled=!1,void(document.getElementById("fetching").style.display="none");for(blTestingVersion&&(console.log("bypassCache: "+bypassCache),console.log("GetPlayerMatches() axios_response..."),console.dir(l.data)),total_matches=l.data.totalMatches,console.log("match_floor:     "+match_floor+" of "+total_matches),i=0;i<l.data.matches.length;i++)0==l.data.matches[i].DBNOs&&(l.data.matches[i].DBNOs="-"),0==l.data.matches[i].kills&&(l.data.matches[i].kills="-"),0==l.data.matches[i].damageDealt&&(l.data.matches[i].damageDealt="-");vm.getMatchData(l.data.matches),e.disabled=a.disabled=t.disabled=!1,a.disabled=match_floor<10,t.disabled=match_floor+10>total_matches-1,document.getElementById("btnPreviousMatches").style.display="block",document.getElementById("btnNextMatches").style.display="block",document.getElementById("vueapp").style.display="block",document.getElementById("fetching").style.display="none"}async function GetTelemetry(e){console.log("Match diag -> platform: "+strPlatform+", matchId: "+e+", player: '"+strPlayerName+"'"),axios_telemetry_response=null;const a=document.getElementById("div-analyzing"),t=document.getElementById("d3-tree01");a.style.display="block",t.style.display="none";try{axios_telemetry_response=await axios.get(hooty_server_url+"/getmatchtelemetry",{params:{platform:strPlatform,matchID:e,player_name:strPlayerName},headers:{"Content-Encoding":"gzip"}})}catch(e){return alert("Error getting tree details: "+e.message),document.getElementById("div-analyzing").style.display="none",void(document.getElementById("d3-tree01").style.display="none")}blTestingVersion&&(console.log("axios_telemetry_response.data..."),console.dir(axios_telemetry_response.data));try{document.getElementById("d3-svg01").innerHTML="",CreateTreeFromD3(),a.style.display="none",t.style.display="block"}catch(e){"cycle"==e.message?alert("Cannot draw tree since two people killed each other and therefore destroys hierarchy. This is a bug I need to fix. I apologize."):alert("D3 tree error: "+e.message),a.style.display="none",t.style.display="none"}try{document.getElementById(strPlayerName).classList.add("searchedPlayer"),UpdateTreeContext(strPlayerName)}catch(e){console.log("error in UpdateTreeContext() -> "+e),alert("error in UpdateTreeContext()")}for(i=0;i<axios_telemetry_response.data.arrPlayersDamageLog.length;i++){var l=axios_telemetry_response.data.arrPlayersDamageLog[i],r=axios_telemetry_response.data.playerTeamId;if(l.attacker.name==strPlayerName||l.victim.name==strPlayerName){var n="";u=(u=new String(l.attacker.teamId)).padStart(3,"0")+".",f=(f=new String(l.victim.teamId)).padStart(3,"0")+".";var o=new String(l.attacker.name).padEnd(16," "),s=new String(l.victim.name).padEnd(16," ");if("LogPlayerTakeDamage"==l._T){var m=1==l.killingStroke?" *kill/knock*":"",d=1==l.teammateDamage?" *teammate-damage*":"",c=1==l.selfDamage?" *self-damage*":"";n=l.matchTime+" ["+u+" "+o+"   "+f+" "+s+"] "+strBot(l.attacker.isBot)+" * "+strBot(l.victim.isBot)+" "+parseInt(l.attacker.health)+" vs "+parseInt(l.victim.healthBeforeDamage)+", dmg: "+parseInt(l.damage)+", "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+", distance: "+l.distance+m+c+d}else if("LogPlayerMakeGroggy"==l._T)n=l.byPlayer?l.matchTime+" ["+u+" "+o+" v "+f+" "+s+"] "+strBot(l.attacker.isBot)+" v "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+" *knock*":l.matchTime+" ["+l.attacker.name.padEnd(16," ")+"     v "+f+" "+s+"] *env* v "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason;else if("LogPlayerKill"==l._T)if(l.byPlayer){var y=l.isThirst?" *thirst*":"",g=l.isSelfKill?" *self-kill*":"",p=l.isTeammateKill?" *teammate-kill*":"",h=l.isBleedOut?" *bleed-out*":"";n=l.matchTime+" ["+u+" "+o+" x "+f+" "+s+"] "+strBot(l.attacker.isBot)+" x "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+y+g+p+h}else n=l.matchTime+" ["+o+"     x "+f+" "+s+"] *env* x "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+" bleedout?";else"LogPlayerRevive"==l._T&&(n=l.matchTime+" ["+u+" "+o+" ^ "+f+" "+s+"] *revive*");console.log(n)}else if(l.victim.teamId==r){var u,f;n=null;u=(u=new String(l.attacker.teamId)).padStart(3,"0")+".",f=(f=new String(l.victim.teamId)).padStart(3,"0")+".";o=new String(l.attacker.name).padEnd(16," "),s=new String(l.victim.name).padEnd(16," ");if("LogPlayerMakeGroggy"==l._T)n=l.byPlayer?l.matchTime+" ["+u+" "+o+" v "+f+" "+s+"] "+strBot(l.attacker.isBot)+" v "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+" *knock*":l.matchTime+" ["+l.attacker.name.padEnd(16," ")+"     v "+f+" "+s+"] *env* v "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason;else if("LogPlayerKill"==l._T)if(l.byPlayer){y=l.isThirst?" *thirst*":"",g=l.isSelfKill?" *self-kill*":"",p=l.isTeammateKill?" *teammate-kill*":"",h=l.isBleedOut?" *bleed-out*":"";n=l.matchTime+" ["+u+" "+o+" x "+f+" "+s+"] "+strBot(l.attacker.isBot)+" x "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+y+g+p+h}else n=l.matchTime+" ["+o+"     x "+f+" "+s+"] *env* x "+strBot(l.victim.isBot)+" "+l.damageTypeCategory+"/"+l.damageCauserName+"/"+l.damageReason+" bleedout?";else"LogPlayerRevive"==l._T&&(n=l.matchTime+" ["+u+" "+o+" ^ "+f+" "+s+"] *revive*");null!=n&&console.log(n)}}console.log("show winPlace and of how many teams there were")}function CreateTreeFromD3(){const e=axios_telemetry_response.data;let a=d3.csvParse(e.csvDataForD3);const t=d3.stratify().id(function(e){return e.name}).parentId(function(e){return e.parent})(a),l=(t.height,d3.tree().nodeSize([14,130]));let r=160+130*t.height,n=0,o=0,s=0;l(t);let m=1/0,i=-m;t.each(e=>{e.x>i&&(i=e.x),e.x<m&&(m=e.x),e.x<0?e.x<o&&(o=e.x):e.x>s&&(s=e.x)}),n=Math.abs(o)+s+40;const d=d3.select(document.getElementById("d3-svg01")).style("width",r).style("height",n).append("g").attr("font-family","sans-serif").attr("font-size",12).attr("transform",`translate(10,${14-m})`),c=(d.append("g").attr("fill","none").attr("stroke-opacity",.4).attr("stroke-width",1.5).selectAll("path").data(t.links()).enter().append("path").attr("stroke",e=>"Match"==e.source.id?"#414144":"#8f91a1").attr("d",d3.linkHorizontal().x(e=>e.y).y(e=>e.x)),d.append("g").selectAll("g").data(t.descendants()).enter().append("g").attr("transform",e=>`translate(${e.y},${e.x})`));c.append("circle").attr("fill",e=>"Match"==e.id?"#414144":"#8f91a1").attr("r",2.5),c.append("text").attr("fill","#dcddde").attr("class",a=>e.allHumanNames.includes(a.data.name)?"allPlayers humanPlayers":e.allBotNames.includes(a.data.name)?"allPlayers botPlayers":"Match"==a.data.name||"Winner"==a.data.name||"Winners"==a.data.name||"Environment kills"==a.data.name||"Self kills"==a.data.name||a.data.name.includes("*")?"categories":void 0).attr("id",a=>{if(e.allHumanNames.includes(a.data.name)||e.allBotNames.includes(a.data.name))return a.data.name}).attr("onclick",a=>{if(e.allHumanNames.includes(a.data.name)||e.allBotNames.includes(a.data.name))return"UpdateTreeContext('"+a.data.name+"')"}).attr("cursor",e=>"Match"==e.data.name||"Winner"==e.data.name||"Winners"==e.data.name||"Environment kills"==e.data.name||"Self kills"==e.data.name||e.data.name.includes("*")?"normal":"pointer").attr("dy","0.5em").attr("x",e=>"Winner"==e.data.name||"Winners"==e.data.name||"Environment kills"==e.data.name||"Self kills"==e.data.name?-6:6).attr("text-anchor",e=>"Winner"==e.data.name||"Winners"==e.data.name||"Environment kills"==e.data.name||"Self kills"==e.data.name?"end":"start").text(e=>"Match"==e.data.name?"":"Winner"==e.data.name||"Winners"==e.data.name||"Environment kills"==e.data.name||"Self kills"==e.data.name?"*"+e.data.name+"*":e.data.name)}function UpdateTreeContext(e){prevSelectedPlayer==e&&ShowPlayerReport(e),prevSelectedPlayer=e;const a=axios_telemetry_response.data;let t=document.getElementsByClassName("allPlayers"),l=null,r=null,n=null;a.arrTeams.forEach(a=>{a.teammates.forEach(t=>{t.name==e&&(l=a.teamId)})}),a.arrKillLog.forEach(t=>{t.victim==e&&t.killer!=e&&(r=t.killer,a.arrTeams.forEach(e=>{e.teammates.forEach(a=>{a.name==r&&(n=e.teamId)})}))});for(let o=0;o<t.length;o++){let s=t[o].classList,m=t[o].textContent;for(let e=s.length-1;e>=0;e--)"allPlayers"!=s[e]&&"humanPlayers"!=s[e]&&"botPlayers"!=s[e]&&"searchedPlayer"!=s[e]&&s.remove(s[e]);e==m?s.add("selectedPlayer"):a.arrTeams.forEach(e=>{e.teammates.forEach(a=>{a.name==m&&(e.teamId==l?s.add("playerTeammate"):e.teamId==n&&(m==r?s.add("killer"):s.add("killerTeammate")))})})}}function ShowPlayerReport(e){console.log("ShowPlayerReport() -> "+e)}function btnSearchPlayer_Click(){""!=document.getElementById("inputPlayerName").value&&(match_floor=0,prelim())}function btnNext_Click(){""!=document.getElementById("inputPlayerName").value&&(match_floor+=10,prelim())}function btnPrevious_Click(){""!=document.getElementById("inputPlayerName").value&&(match_floor-=10,prelim())}function prelim(){strPlatform=document.querySelector("#slcPlatform option:checked").value,"!"==(strPlayerName=document.getElementById("inputPlayerName").value)[strPlayerName.length-1]?(bypassCache="y",strPlayerName=strPlayerName.slice(0,strPlayerName.length-1)):bypassCache="n",console.log(strLine),console.log("Searching: "+strPlatform+"/"+strPlayerName),GetPlayerMatches()}function _printRoster(e){var a;return e.forEach(e=>{a+=e+", "}),a}function ClickedSomething(e){console.log("ClickedSomething() -> "+e)}